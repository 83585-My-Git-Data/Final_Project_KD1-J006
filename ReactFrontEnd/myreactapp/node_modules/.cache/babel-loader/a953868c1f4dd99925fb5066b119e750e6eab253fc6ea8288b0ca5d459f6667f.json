{"ast":null,"code":"import axios from 'axios';\nimport { config } from './config';\nexport async function register(firstName, lastName, email, password, contact, role) {\n  try {\n    const body = {\n      firstName,\n      lastName,\n      email,\n      password,\n      contact,\n      role: role.toUpperCase()\n    }; // Ensure role is uppercase\n\n    const response = await axios.post(`${config.serverUrl}/admin/register`, body, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n      // withCredentials: true  // Include this if your backend expects credentials\n    });\n    return response.data;\n  } catch (ex) {\n    console.error('exception: ', ex);\n    return null;\n  }\n}\nexport async function register2(userId, batch, address, course, jobRole, dob, experienceLevel, gender, placementStatus, companyName) {\n  try {\n    const body = {\n      batch,\n      address,\n      course,\n      jobRole,\n      dob,\n      experienceLevel,\n      gender,\n      placementStatus,\n      companyName\n    };\n    const response = await axios.post(`${config.serverUrl}/admin/register2/${userId}`,\n    // Use userId in URL\n    body, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (ex) {\n    console.log('Exception:', ex);\n    return null;\n  }\n}\nexport async function register3(secondaryEducationCollege, secondaryEducationPercentage, secondaryEducationPassoutYear, higherSecondaryEducationCollege, higherSecondaryEducationPercentage, higherSecondaryEducationPassoutYear, graduationCourse, graduationPercentage, graduationPassoutYear, postgraduationCourse, postgraduationPercentage, postgraduationPassoutYear) {\n  try {\n    const body = {\n      secondaryEducationCollege,\n      secondaryEducationPercentage,\n      secondaryEducationPassoutYear,\n      higherSecondaryEducationCollege,\n      higherSecondaryEducationPercentage,\n      higherSecondaryEducationPassoutYear,\n      graduationCourse,\n      graduationPercentage,\n      graduationPassoutYear,\n      postgraduationCourse,\n      postgraduationPercentage,\n      postgraduationPassoutYear\n    };\n    const response = await axios.post(`${config.serverUrl}/admin/register3`, body);\n    return response.data;\n  } catch (ex) {\n    console.log(`exception:`, ex);\n    return null;\n  }\n}\nexport async function login(email, password) {\n  const body = {\n    email,\n    password\n  };\n  try {\n    const response = await axios.post(`${config.serverUrl}/admin/login`, body);\n    return response.data;\n  } catch (ex) {\n    console.log(`exception: `, ex);\n    return null;\n  }\n}","map":{"version":3,"names":["axios","config","register","firstName","lastName","email","password","contact","role","body","toUpperCase","response","post","serverUrl","headers","data","ex","console","error","register2","userId","batch","address","course","jobRole","dob","experienceLevel","gender","placementStatus","companyName","log","register3","secondaryEducationCollege","secondaryEducationPercentage","secondaryEducationPassoutYear","higherSecondaryEducationCollege","higherSecondaryEducationPercentage","higherSecondaryEducationPassoutYear","graduationCourse","graduationPercentage","graduationPassoutYear","postgraduationCourse","postgraduationPercentage","postgraduationPassoutYear","login"],"sources":["F:/DAC_Project_KD1_24/ReactFrontEnd/myreactapp/src/services/admin.js"],"sourcesContent":["import axios from 'axios';\nimport { config } from './config';\n\nexport async function register(firstName, lastName, email, password, contact, role) {\n  try {\n    const body = { firstName, lastName, email, password, contact, role: role.toUpperCase() }; // Ensure role is uppercase\n\n    const response = await axios.post(\n      `${config.serverUrl}/admin/register`,\n      body,\n      {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        // withCredentials: true  // Include this if your backend expects credentials\n      }\n    );\n\n    return response.data;\n  } catch (ex) {\n    console.error('exception: ', ex);\n    return null;\n  }\n}\n\n\nexport async function register2(userId, batch, address, course, jobRole, dob, experienceLevel, gender, placementStatus, companyName) {\n  try {\n    const body = { batch, address, course, jobRole, dob, experienceLevel, gender, placementStatus, companyName };\n    const response = await axios.post(\n      `${config.serverUrl}/admin/register2/${userId}`, // Use userId in URL\n      body,\n      {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n    return response.data;\n  } catch (ex) {\n    console.log('Exception:', ex);\n    return null;\n  }\n}\n\n\nexport async function register3(secondaryEducationCollege, secondaryEducationPercentage, secondaryEducationPassoutYear, higherSecondaryEducationCollege, higherSecondaryEducationPercentage,\n  higherSecondaryEducationPassoutYear, graduationCourse, graduationPercentage, graduationPassoutYear, postgraduationCourse, postgraduationPercentage, postgraduationPassoutYear) {\n  try {\n    const body = { secondaryEducationCollege, secondaryEducationPercentage, secondaryEducationPassoutYear, higherSecondaryEducationCollege, higherSecondaryEducationPercentage, higherSecondaryEducationPassoutYear,\n      graduationCourse, graduationPercentage, graduationPassoutYear, postgraduationCourse, postgraduationPercentage, postgraduationPassoutYear };\n    const response = await axios.post(\n      `${config.serverUrl}/admin/register3`,\n      body\n    );\n    return response.data;\n  } catch (ex) {\n    console.log(`exception:`, ex);\n    return null;\n  }\n}\n\nexport async function login(email, password) {\n  const body = { email, password };\n  try {\n    const response = await axios.post(`${config.serverUrl}/admin/login`, body);\n    return response.data;\n  } catch (ex) {\n    console.log(`exception: `, ex);\n    return null;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}